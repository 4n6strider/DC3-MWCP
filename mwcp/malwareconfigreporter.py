"""
This module allows the use of old deprecated names and features.
This will eventually be removed.
"""

import os
import sys

import warnings
warnings.warn('The mwcp.malwareconfigreporter module is deprecated; use mwcp.reporter instead', DeprecationWarning, 2)

from mwcp.reporter import Reporter
from mwcp import resources


# Implement class to deprecate resourcedir feature.
class malwareconfigreporter(Reporter):

    def __init__(self, resourcedir=None, **kwargs):
        super(malwareconfigreporter, self).__init__(**kwargs)
        self._resourcedir = os.path.dirname(resources.__file__)
        if resourcedir:
            self.resourcedir = resourcedir

    # Allow user to still use resourcedir feature, but warn about deprecation.
    @property
    def resourcedir(self):
        warnings.warn(
            'resourcedir feature has been deprecated. Dependencies should be properly installed and managed by the parser developer.', DeprecationWarning, 2)
        return self._resourcedir

    @resourcedir.setter
    def resourcedir(self, resourcedir):
        warnings.warn(
            'resourcedir feature has been deprecated. Dependencies should be properly installed and managed by the parser developer.', DeprecationWarning, 2)
        self._resourcedir = resourcedir
        if self.resourcedir not in sys.path:
            sys.path.append(self.resourcedir)

        # we put resourcedir in PYTHONPATH in case we shell out or children
        # processes need this
        if 'PYTHONPATH' in os.environ:
            if self.resourcedir not in os.environ['PYTHONPATH']:
                os.environ['PYTHONPATH'] = os.environ[
                                               'PYTHONPATH'] + os.pathsep + self.resourcedir
        else:
            os.environ['PYTHONPATH'] = self.resourcedir
